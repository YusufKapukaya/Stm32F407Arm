
EmptyStmProjekt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000508  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000690  08000698  00001698  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000690  08000690  00001698  2**0
                  CONTENTS
  4 .ARM          00000000  08000690  08000690  00001698  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000690  08000698  00001698  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000690  08000690  00001690  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000694  08000694  00001694  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00001698  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001698  2**0
                  CONTENTS
 10 .bss          00000020  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001698  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b2e  00000000  00000000  000016c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002ba  00000000  00000000  000021f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  000024b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000073  00000000  00000000  00002558  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001d3c  00000000  00000000  000025cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000def  00000000  00000000  00004307  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000084b3  00000000  00000000  000050f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000d5a9  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001b0  00000000  00000000  0000d5ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000066  00000000  00000000  0000d79c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000678 	.word	0x08000678

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000678 	.word	0x08000678

080001c8 <gpioWritePin>:
	else if(pGPIOx==GPIOI)
		GPIOI_CLCK_EN();
}

void gpioWritePin(GPIO_RegDef_t* pGPIOx, GPIO_PinNo_e pinNo, BOOL val)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
 80001d0:	460b      	mov	r3, r1
 80001d2:	70fb      	strb	r3, [r7, #3]
 80001d4:	4613      	mov	r3, r2
 80001d6:	70bb      	strb	r3, [r7, #2]
	if(val==GPIO_PIN_SET)
 80001d8:	78bb      	ldrb	r3, [r7, #2]
 80001da:	2b01      	cmp	r3, #1
 80001dc:	d109      	bne.n	80001f2 <gpioWritePin+0x2a>
	{
		pGPIOx->GPIOx_ODR |=(1<<pinNo);
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	695b      	ldr	r3, [r3, #20]
 80001e2:	78fa      	ldrb	r2, [r7, #3]
 80001e4:	2101      	movs	r1, #1
 80001e6:	fa01 f202 	lsl.w	r2, r1, r2
 80001ea:	431a      	orrs	r2, r3
 80001ec:	687b      	ldr	r3, [r7, #4]
 80001ee:	615a      	str	r2, [r3, #20]
	}else{
		pGPIOx->GPIOx_ODR &=~(1<<pinNo);
	}
}
 80001f0:	e009      	b.n	8000206 <gpioWritePin+0x3e>
		pGPIOx->GPIOx_ODR &=~(1<<pinNo);
 80001f2:	687b      	ldr	r3, [r7, #4]
 80001f4:	695b      	ldr	r3, [r3, #20]
 80001f6:	78fa      	ldrb	r2, [r7, #3]
 80001f8:	2101      	movs	r1, #1
 80001fa:	fa01 f202 	lsl.w	r2, r1, r2
 80001fe:	43d2      	mvns	r2, r2
 8000200:	401a      	ands	r2, r3
 8000202:	687b      	ldr	r3, [r7, #4]
 8000204:	615a      	str	r2, [r3, #20]
}
 8000206:	bf00      	nop
 8000208:	370c      	adds	r7, #12
 800020a:	46bd      	mov	sp, r7
 800020c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000210:	4770      	bx	lr

08000212 <gpioTogglePin>:
	return (uint16_t)pGPIOx->GPIOx_IDR;
}


void gpioTogglePin(GPIO_RegDef_t* pGPIOx, uint8_t pinNo)
{
 8000212:	b480      	push	{r7}
 8000214:	b083      	sub	sp, #12
 8000216:	af00      	add	r7, sp, #0
 8000218:	6078      	str	r0, [r7, #4]
 800021a:	460b      	mov	r3, r1
 800021c:	70fb      	strb	r3, [r7, #3]
	pGPIOx->GPIOx_ODR ^= (1<<pinNo);
 800021e:	687b      	ldr	r3, [r7, #4]
 8000220:	695b      	ldr	r3, [r3, #20]
 8000222:	78fa      	ldrb	r2, [r7, #3]
 8000224:	2101      	movs	r1, #1
 8000226:	fa01 f202 	lsl.w	r2, r1, r2
 800022a:	405a      	eors	r2, r3
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	615a      	str	r2, [r3, #20]
}
 8000230:	bf00      	nop
 8000232:	370c      	adds	r7, #12
 8000234:	46bd      	mov	sp, r7
 8000236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800023a:	4770      	bx	lr

0800023c <main>:
#define		NO_ALTERNATE_FUNC	0
	int counter;
#define		TURN_ON				1
#define		TURN_OFF			0
int main(void)
{
 800023c:	b480      	push	{r7}
 800023e:	af00      	add	r7, sp, #0

	GPIO_Handle_t *pLedArry[GPIO_ARRAY_SIZE]={&op_green,&op_orange,&op_red,&op_blue};
	for(int i=0;i<GPIO_ARRAY_SIZE;i++)
		gpio_init(pLedArry[i]);
	*/
	counter=0;
 8000240:	4b86      	ldr	r3, [pc, #536]	@ (800045c <main+0x220>)
 8000242:	2200      	movs	r2, #0
 8000244:	601a      	str	r2, [r3, #0]
	RCC->AHB1ENR |=(1U<<2);			//Clock enabled of GPIOC
 8000246:	4b86      	ldr	r3, [pc, #536]	@ (8000460 <main+0x224>)
 8000248:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800024a:	4a85      	ldr	r2, [pc, #532]	@ (8000460 <main+0x224>)
 800024c:	f043 0304 	orr.w	r3, r3, #4
 8000250:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |=(1U<<3);			//Clock enabled of GPIOD
 8000252:	4b83      	ldr	r3, [pc, #524]	@ (8000460 <main+0x224>)
 8000254:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000256:	4a82      	ldr	r2, [pc, #520]	@ (8000460 <main+0x224>)
 8000258:	f043 0308 	orr.w	r3, r3, #8
 800025c:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOC->GPIOx_MODER &=~(1U<<10);		//MODER 5 INPUT 00
 800025e:	4b81      	ldr	r3, [pc, #516]	@ (8000464 <main+0x228>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	4a80      	ldr	r2, [pc, #512]	@ (8000464 <main+0x228>)
 8000264:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000268:	6013      	str	r3, [r2, #0]
	GPIOC->GPIOx_MODER &=~(1U<<11);
 800026a:	4b7e      	ldr	r3, [pc, #504]	@ (8000464 <main+0x228>)
 800026c:	681b      	ldr	r3, [r3, #0]
 800026e:	4a7d      	ldr	r2, [pc, #500]	@ (8000464 <main+0x228>)
 8000270:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8000274:	6013      	str	r3, [r2, #0]

	GPIOC->GPIOx_MODER &=~(1U<<12);		//MODER 6 INPUT 00
 8000276:	4b7b      	ldr	r3, [pc, #492]	@ (8000464 <main+0x228>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	4a7a      	ldr	r2, [pc, #488]	@ (8000464 <main+0x228>)
 800027c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000280:	6013      	str	r3, [r2, #0]
	GPIOC->GPIOx_MODER &=~(1U<<13);
 8000282:	4b78      	ldr	r3, [pc, #480]	@ (8000464 <main+0x228>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	4a77      	ldr	r2, [pc, #476]	@ (8000464 <main+0x228>)
 8000288:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800028c:	6013      	str	r3, [r2, #0]

	GPIOC->GPIOx_MODER &=~(1U<<14);		//MODER 7 INPUT 00
 800028e:	4b75      	ldr	r3, [pc, #468]	@ (8000464 <main+0x228>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	4a74      	ldr	r2, [pc, #464]	@ (8000464 <main+0x228>)
 8000294:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8000298:	6013      	str	r3, [r2, #0]
	GPIOC->GPIOx_MODER &=~(1U<<15);
 800029a:	4b72      	ldr	r3, [pc, #456]	@ (8000464 <main+0x228>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	4a71      	ldr	r2, [pc, #452]	@ (8000464 <main+0x228>)
 80002a0:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80002a4:	6013      	str	r3, [r2, #0]

	GPIOC->GPIOx_MODER &=~(1U<<16);		//MODER 8 INPUT 00
 80002a6:	4b6f      	ldr	r3, [pc, #444]	@ (8000464 <main+0x228>)
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	4a6e      	ldr	r2, [pc, #440]	@ (8000464 <main+0x228>)
 80002ac:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80002b0:	6013      	str	r3, [r2, #0]
	GPIOC->GPIOx_MODER &=~(1U<<17);
 80002b2:	4b6c      	ldr	r3, [pc, #432]	@ (8000464 <main+0x228>)
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	4a6b      	ldr	r2, [pc, #428]	@ (8000464 <main+0x228>)
 80002b8:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 80002bc:	6013      	str	r3, [r2, #0]
	//for GPIOD OUTPUT
	/*
	 */
	GPIOD->GPIOx_MODER &=~(1U<<25);		//MODER 12 OUTPUT 01
 80002be:	4b6a      	ldr	r3, [pc, #424]	@ (8000468 <main+0x22c>)
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	4a69      	ldr	r2, [pc, #420]	@ (8000468 <main+0x22c>)
 80002c4:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 80002c8:	6013      	str	r3, [r2, #0]
	GPIOD->GPIOx_MODER |=(1U<<24);
 80002ca:	4b67      	ldr	r3, [pc, #412]	@ (8000468 <main+0x22c>)
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	4a66      	ldr	r2, [pc, #408]	@ (8000468 <main+0x22c>)
 80002d0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80002d4:	6013      	str	r3, [r2, #0]

	GPIOD->GPIOx_MODER &=~(1U<<27);		//MODER 13 OUTPUT 01
 80002d6:	4b64      	ldr	r3, [pc, #400]	@ (8000468 <main+0x22c>)
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	4a63      	ldr	r2, [pc, #396]	@ (8000468 <main+0x22c>)
 80002dc:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 80002e0:	6013      	str	r3, [r2, #0]
	GPIOD->GPIOx_MODER |=(1U<<26);
 80002e2:	4b61      	ldr	r3, [pc, #388]	@ (8000468 <main+0x22c>)
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	4a60      	ldr	r2, [pc, #384]	@ (8000468 <main+0x22c>)
 80002e8:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80002ec:	6013      	str	r3, [r2, #0]

	GPIOD->GPIOx_MODER &=~(1U<<29);		//MODER 14 OUTPUT 01
 80002ee:	4b5e      	ldr	r3, [pc, #376]	@ (8000468 <main+0x22c>)
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	4a5d      	ldr	r2, [pc, #372]	@ (8000468 <main+0x22c>)
 80002f4:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 80002f8:	6013      	str	r3, [r2, #0]
	GPIOD->GPIOx_MODER |=(1U<<28);
 80002fa:	4b5b      	ldr	r3, [pc, #364]	@ (8000468 <main+0x22c>)
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	4a5a      	ldr	r2, [pc, #360]	@ (8000468 <main+0x22c>)
 8000300:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000304:	6013      	str	r3, [r2, #0]

	GPIOD->GPIOx_MODER &=~(1U<<31);		//MODER 15 OUTPUT 01
 8000306:	4b58      	ldr	r3, [pc, #352]	@ (8000468 <main+0x22c>)
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	4a57      	ldr	r2, [pc, #348]	@ (8000468 <main+0x22c>)
 800030c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8000310:	6013      	str	r3, [r2, #0]
	GPIOD->GPIOx_MODER |=(1U<<30);
 8000312:	4b55      	ldr	r3, [pc, #340]	@ (8000468 <main+0x22c>)
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	4a54      	ldr	r2, [pc, #336]	@ (8000468 <main+0x22c>)
 8000318:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800031c:	6013      	str	r3, [r2, #0]
	RCC->APB2ENR |=(1U<<14);				//Clock enabled of SYSCFG
 800031e:	4b50      	ldr	r3, [pc, #320]	@ (8000460 <main+0x224>)
 8000320:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000322:	4a4f      	ldr	r2, [pc, #316]	@ (8000460 <main+0x224>)
 8000324:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000328:	6453      	str	r3, [r2, #68]	@ 0x44

	//EXTI 5 port C Interrupt
	SYSCFG->EXTICR[1]&=~(1<<4);
 800032a:	4b50      	ldr	r3, [pc, #320]	@ (800046c <main+0x230>)
 800032c:	68db      	ldr	r3, [r3, #12]
 800032e:	4a4f      	ldr	r2, [pc, #316]	@ (800046c <main+0x230>)
 8000330:	f023 0310 	bic.w	r3, r3, #16
 8000334:	60d3      	str	r3, [r2, #12]
	SYSCFG->EXTICR[1]|=(1<<5);
 8000336:	4b4d      	ldr	r3, [pc, #308]	@ (800046c <main+0x230>)
 8000338:	68db      	ldr	r3, [r3, #12]
 800033a:	4a4c      	ldr	r2, [pc, #304]	@ (800046c <main+0x230>)
 800033c:	f043 0320 	orr.w	r3, r3, #32
 8000340:	60d3      	str	r3, [r2, #12]
	SYSCFG->EXTICR[1]&=~(1<<6);
 8000342:	4b4a      	ldr	r3, [pc, #296]	@ (800046c <main+0x230>)
 8000344:	68db      	ldr	r3, [r3, #12]
 8000346:	4a49      	ldr	r2, [pc, #292]	@ (800046c <main+0x230>)
 8000348:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800034c:	60d3      	str	r3, [r2, #12]
	SYSCFG->EXTICR[1]&=~(1<<7);
 800034e:	4b47      	ldr	r3, [pc, #284]	@ (800046c <main+0x230>)
 8000350:	68db      	ldr	r3, [r3, #12]
 8000352:	4a46      	ldr	r2, [pc, #280]	@ (800046c <main+0x230>)
 8000354:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000358:	60d3      	str	r3, [r2, #12]

	EXTI->RTSR |=(1U<<5);
 800035a:	4b45      	ldr	r3, [pc, #276]	@ (8000470 <main+0x234>)
 800035c:	689b      	ldr	r3, [r3, #8]
 800035e:	4a44      	ldr	r2, [pc, #272]	@ (8000470 <main+0x234>)
 8000360:	f043 0320 	orr.w	r3, r3, #32
 8000364:	6093      	str	r3, [r2, #8]
	EXTI->IMR |=(1U<<5);
 8000366:	4b42      	ldr	r3, [pc, #264]	@ (8000470 <main+0x234>)
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	4a41      	ldr	r2, [pc, #260]	@ (8000470 <main+0x234>)
 800036c:	f043 0320 	orr.w	r3, r3, #32
 8000370:	6013      	str	r3, [r2, #0]

	//EXTI 6 port C Interrupt
	SYSCFG->EXTICR[1]&=~(1<<8);
 8000372:	4b3e      	ldr	r3, [pc, #248]	@ (800046c <main+0x230>)
 8000374:	68db      	ldr	r3, [r3, #12]
 8000376:	4a3d      	ldr	r2, [pc, #244]	@ (800046c <main+0x230>)
 8000378:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800037c:	60d3      	str	r3, [r2, #12]
	SYSCFG->EXTICR[1]|=(1<<9);
 800037e:	4b3b      	ldr	r3, [pc, #236]	@ (800046c <main+0x230>)
 8000380:	68db      	ldr	r3, [r3, #12]
 8000382:	4a3a      	ldr	r2, [pc, #232]	@ (800046c <main+0x230>)
 8000384:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000388:	60d3      	str	r3, [r2, #12]
	SYSCFG->EXTICR[1]&=~(1<<10);
 800038a:	4b38      	ldr	r3, [pc, #224]	@ (800046c <main+0x230>)
 800038c:	68db      	ldr	r3, [r3, #12]
 800038e:	4a37      	ldr	r2, [pc, #220]	@ (800046c <main+0x230>)
 8000390:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000394:	60d3      	str	r3, [r2, #12]
	SYSCFG->EXTICR[1]&=~(1<<11);
 8000396:	4b35      	ldr	r3, [pc, #212]	@ (800046c <main+0x230>)
 8000398:	68db      	ldr	r3, [r3, #12]
 800039a:	4a34      	ldr	r2, [pc, #208]	@ (800046c <main+0x230>)
 800039c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80003a0:	60d3      	str	r3, [r2, #12]

	EXTI->RTSR |=(1U<<6);
 80003a2:	4b33      	ldr	r3, [pc, #204]	@ (8000470 <main+0x234>)
 80003a4:	689b      	ldr	r3, [r3, #8]
 80003a6:	4a32      	ldr	r2, [pc, #200]	@ (8000470 <main+0x234>)
 80003a8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80003ac:	6093      	str	r3, [r2, #8]
	EXTI->IMR |=(1U<<6);
 80003ae:	4b30      	ldr	r3, [pc, #192]	@ (8000470 <main+0x234>)
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	4a2f      	ldr	r2, [pc, #188]	@ (8000470 <main+0x234>)
 80003b4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80003b8:	6013      	str	r3, [r2, #0]

	//EXTI 7 port C Interrupt
	SYSCFG->EXTICR[1]&=~(1<<12);
 80003ba:	4b2c      	ldr	r3, [pc, #176]	@ (800046c <main+0x230>)
 80003bc:	68db      	ldr	r3, [r3, #12]
 80003be:	4a2b      	ldr	r2, [pc, #172]	@ (800046c <main+0x230>)
 80003c0:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80003c4:	60d3      	str	r3, [r2, #12]
	SYSCFG->EXTICR[1]|=(1<<13);
 80003c6:	4b29      	ldr	r3, [pc, #164]	@ (800046c <main+0x230>)
 80003c8:	68db      	ldr	r3, [r3, #12]
 80003ca:	4a28      	ldr	r2, [pc, #160]	@ (800046c <main+0x230>)
 80003cc:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80003d0:	60d3      	str	r3, [r2, #12]
	SYSCFG->EXTICR[1]&=~(1<<14);
 80003d2:	4b26      	ldr	r3, [pc, #152]	@ (800046c <main+0x230>)
 80003d4:	68db      	ldr	r3, [r3, #12]
 80003d6:	4a25      	ldr	r2, [pc, #148]	@ (800046c <main+0x230>)
 80003d8:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80003dc:	60d3      	str	r3, [r2, #12]
	SYSCFG->EXTICR[1]&=~(1<<15);
 80003de:	4b23      	ldr	r3, [pc, #140]	@ (800046c <main+0x230>)
 80003e0:	68db      	ldr	r3, [r3, #12]
 80003e2:	4a22      	ldr	r2, [pc, #136]	@ (800046c <main+0x230>)
 80003e4:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80003e8:	60d3      	str	r3, [r2, #12]

	EXTI->RTSR |=(1U<<7);
 80003ea:	4b21      	ldr	r3, [pc, #132]	@ (8000470 <main+0x234>)
 80003ec:	689b      	ldr	r3, [r3, #8]
 80003ee:	4a20      	ldr	r2, [pc, #128]	@ (8000470 <main+0x234>)
 80003f0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80003f4:	6093      	str	r3, [r2, #8]
	EXTI->IMR |=(1U<<7);
 80003f6:	4b1e      	ldr	r3, [pc, #120]	@ (8000470 <main+0x234>)
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	4a1d      	ldr	r2, [pc, #116]	@ (8000470 <main+0x234>)
 80003fc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000400:	6013      	str	r3, [r2, #0]

	//EXTI 8 port C Interrupt
	SYSCFG->EXTICR[2]&=~(1<<0);
 8000402:	4b1a      	ldr	r3, [pc, #104]	@ (800046c <main+0x230>)
 8000404:	691b      	ldr	r3, [r3, #16]
 8000406:	4a19      	ldr	r2, [pc, #100]	@ (800046c <main+0x230>)
 8000408:	f023 0301 	bic.w	r3, r3, #1
 800040c:	6113      	str	r3, [r2, #16]
	SYSCFG->EXTICR[2]|=(1<<1);
 800040e:	4b17      	ldr	r3, [pc, #92]	@ (800046c <main+0x230>)
 8000410:	691b      	ldr	r3, [r3, #16]
 8000412:	4a16      	ldr	r2, [pc, #88]	@ (800046c <main+0x230>)
 8000414:	f043 0302 	orr.w	r3, r3, #2
 8000418:	6113      	str	r3, [r2, #16]
	SYSCFG->EXTICR[2]&=~(1<<2);
 800041a:	4b14      	ldr	r3, [pc, #80]	@ (800046c <main+0x230>)
 800041c:	691b      	ldr	r3, [r3, #16]
 800041e:	4a13      	ldr	r2, [pc, #76]	@ (800046c <main+0x230>)
 8000420:	f023 0304 	bic.w	r3, r3, #4
 8000424:	6113      	str	r3, [r2, #16]
	SYSCFG->EXTICR[2]&=~(1<<3);
 8000426:	4b11      	ldr	r3, [pc, #68]	@ (800046c <main+0x230>)
 8000428:	691b      	ldr	r3, [r3, #16]
 800042a:	4a10      	ldr	r2, [pc, #64]	@ (800046c <main+0x230>)
 800042c:	f023 0308 	bic.w	r3, r3, #8
 8000430:	6113      	str	r3, [r2, #16]

	EXTI->RTSR |=(1U<<8);
 8000432:	4b0f      	ldr	r3, [pc, #60]	@ (8000470 <main+0x234>)
 8000434:	689b      	ldr	r3, [r3, #8]
 8000436:	4a0e      	ldr	r2, [pc, #56]	@ (8000470 <main+0x234>)
 8000438:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800043c:	6093      	str	r3, [r2, #8]
	EXTI->IMR |=(1U<<8);
 800043e:	4b0c      	ldr	r3, [pc, #48]	@ (8000470 <main+0x234>)
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	4a0b      	ldr	r2, [pc, #44]	@ (8000470 <main+0x234>)
 8000444:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000448:	6013      	str	r3, [r2, #0]

	//23 IRQ Number	 30 settable EXTI9_5
	NVIC_ISER->ISER0 |=(1U<<23);
 800044a:	4b0a      	ldr	r3, [pc, #40]	@ (8000474 <main+0x238>)
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	4a09      	ldr	r2, [pc, #36]	@ (8000474 <main+0x238>)
 8000450:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000454:	6013      	str	r3, [r2, #0]

  	while(1)
 8000456:	bf00      	nop
 8000458:	e7fd      	b.n	8000456 <main+0x21a>
 800045a:	bf00      	nop
 800045c:	2000001c 	.word	0x2000001c
 8000460:	40023800 	.word	0x40023800
 8000464:	40020800 	.word	0x40020800
 8000468:	40020c00 	.word	0x40020c00
 800046c:	40013800 	.word	0x40013800
 8000470:	40013c00 	.word	0x40013c00
 8000474:	e000e100 	.word	0xe000e100

08000478 <EXTI9_5_IRQHandler>:
	}
}


void EXTI9_5_IRQHandler ()
{
 8000478:	b580      	push	{r7, lr}
 800047a:	af00      	add	r7, sp, #0

	if(EXTI->PR & (1U<<5)){
 800047c:	4b48      	ldr	r3, [pc, #288]	@ (80005a0 <EXTI9_5_IRQHandler+0x128>)
 800047e:	695b      	ldr	r3, [r3, #20]
 8000480:	f003 0320 	and.w	r3, r3, #32
 8000484:	2b00      	cmp	r3, #0
 8000486:	d026      	beq.n	80004d6 <EXTI9_5_IRQHandler+0x5e>
    	if(counter%2){
 8000488:	4b46      	ldr	r3, [pc, #280]	@ (80005a4 <EXTI9_5_IRQHandler+0x12c>)
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	f003 0301 	and.w	r3, r3, #1
 8000490:	2b00      	cmp	r3, #0
 8000492:	d00a      	beq.n	80004aa <EXTI9_5_IRQHandler+0x32>
    	gpioWritePin(GPIOD,LED_GREEN,TURN_ON);
 8000494:	2201      	movs	r2, #1
 8000496:	210c      	movs	r1, #12
 8000498:	4843      	ldr	r0, [pc, #268]	@ (80005a8 <EXTI9_5_IRQHandler+0x130>)
 800049a:	f7ff fe95 	bl	80001c8 <gpioWritePin>
    	gpioWritePin(GPIOD,LED_ORANGE,TURN_OFF);
 800049e:	2200      	movs	r2, #0
 80004a0:	210d      	movs	r1, #13
 80004a2:	4841      	ldr	r0, [pc, #260]	@ (80005a8 <EXTI9_5_IRQHandler+0x130>)
 80004a4:	f7ff fe90 	bl	80001c8 <gpioWritePin>
 80004a8:	e009      	b.n	80004be <EXTI9_5_IRQHandler+0x46>
     	 //GPIOD->GPIOx_ODR |=(1U<<12);
     	 //GPIOD->GPIOx_ODR &=~(1U<<13);
    	}
    	else{
       	gpioWritePin(GPIOD,LED_GREEN,TURN_OFF);
 80004aa:	2200      	movs	r2, #0
 80004ac:	210c      	movs	r1, #12
 80004ae:	483e      	ldr	r0, [pc, #248]	@ (80005a8 <EXTI9_5_IRQHandler+0x130>)
 80004b0:	f7ff fe8a 	bl	80001c8 <gpioWritePin>
       	gpioWritePin(GPIOD,LED_ORANGE,TURN_ON);
 80004b4:	2201      	movs	r2, #1
 80004b6:	210d      	movs	r1, #13
 80004b8:	483b      	ldr	r0, [pc, #236]	@ (80005a8 <EXTI9_5_IRQHandler+0x130>)
 80004ba:	f7ff fe85 	bl	80001c8 <gpioWritePin>
    	 //GPIOD->GPIOx_ODR |=(1U<<13);
    	 //GPIOD->GPIOx_ODR &=~(1U<<12);
    	}
    	EXTI->PR |= (1U<<5);
 80004be:	4b38      	ldr	r3, [pc, #224]	@ (80005a0 <EXTI9_5_IRQHandler+0x128>)
 80004c0:	695b      	ldr	r3, [r3, #20]
 80004c2:	4a37      	ldr	r2, [pc, #220]	@ (80005a0 <EXTI9_5_IRQHandler+0x128>)
 80004c4:	f043 0320 	orr.w	r3, r3, #32
 80004c8:	6153      	str	r3, [r2, #20]
    	counter++;
 80004ca:	4b36      	ldr	r3, [pc, #216]	@ (80005a4 <EXTI9_5_IRQHandler+0x12c>)
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	3301      	adds	r3, #1
 80004d0:	4a34      	ldr	r2, [pc, #208]	@ (80005a4 <EXTI9_5_IRQHandler+0x12c>)
 80004d2:	6013      	str	r3, [r2, #0]
    	gpioWritePin(GPIOD,LED_BLUE,TURN_OFF);
    	}
    	EXTI->PR |= (1U<<8);
	}

}
 80004d4:	e062      	b.n	800059c <EXTI9_5_IRQHandler+0x124>
	}else if(EXTI->PR & (1U<<6)){
 80004d6:	4b32      	ldr	r3, [pc, #200]	@ (80005a0 <EXTI9_5_IRQHandler+0x128>)
 80004d8:	695b      	ldr	r3, [r3, #20]
 80004da:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80004de:	2b00      	cmp	r3, #0
 80004e0:	d021      	beq.n	8000526 <EXTI9_5_IRQHandler+0xae>
    	if(counter%2){
 80004e2:	4b30      	ldr	r3, [pc, #192]	@ (80005a4 <EXTI9_5_IRQHandler+0x12c>)
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	f003 0301 	and.w	r3, r3, #1
 80004ea:	2b00      	cmp	r3, #0
 80004ec:	d00a      	beq.n	8000504 <EXTI9_5_IRQHandler+0x8c>
        gpioWritePin(GPIOD,LED_RED,TURN_ON);
 80004ee:	2201      	movs	r2, #1
 80004f0:	210e      	movs	r1, #14
 80004f2:	482d      	ldr	r0, [pc, #180]	@ (80005a8 <EXTI9_5_IRQHandler+0x130>)
 80004f4:	f7ff fe68 	bl	80001c8 <gpioWritePin>
        gpioWritePin(GPIOD,LED_BLUE,TURN_OFF);
 80004f8:	2200      	movs	r2, #0
 80004fa:	210f      	movs	r1, #15
 80004fc:	482a      	ldr	r0, [pc, #168]	@ (80005a8 <EXTI9_5_IRQHandler+0x130>)
 80004fe:	f7ff fe63 	bl	80001c8 <gpioWritePin>
 8000502:	e009      	b.n	8000518 <EXTI9_5_IRQHandler+0xa0>
    	gpioWritePin(GPIOD,LED_RED,TURN_OFF);
 8000504:	2200      	movs	r2, #0
 8000506:	210e      	movs	r1, #14
 8000508:	4827      	ldr	r0, [pc, #156]	@ (80005a8 <EXTI9_5_IRQHandler+0x130>)
 800050a:	f7ff fe5d 	bl	80001c8 <gpioWritePin>
    	gpioWritePin(GPIOD,LED_BLUE,TURN_ON);
 800050e:	2201      	movs	r2, #1
 8000510:	210f      	movs	r1, #15
 8000512:	4825      	ldr	r0, [pc, #148]	@ (80005a8 <EXTI9_5_IRQHandler+0x130>)
 8000514:	f7ff fe58 	bl	80001c8 <gpioWritePin>
    	EXTI->PR |= (1U<<6);
 8000518:	4b21      	ldr	r3, [pc, #132]	@ (80005a0 <EXTI9_5_IRQHandler+0x128>)
 800051a:	695b      	ldr	r3, [r3, #20]
 800051c:	4a20      	ldr	r2, [pc, #128]	@ (80005a0 <EXTI9_5_IRQHandler+0x128>)
 800051e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000522:	6153      	str	r3, [r2, #20]
}
 8000524:	e03a      	b.n	800059c <EXTI9_5_IRQHandler+0x124>
	}else if(EXTI->PR & (1U<<7)){
 8000526:	4b1e      	ldr	r3, [pc, #120]	@ (80005a0 <EXTI9_5_IRQHandler+0x128>)
 8000528:	695b      	ldr	r3, [r3, #20]
 800052a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800052e:	2b00      	cmp	r3, #0
 8000530:	d017      	beq.n	8000562 <EXTI9_5_IRQHandler+0xea>
    	if(counter%2){
 8000532:	4b1c      	ldr	r3, [pc, #112]	@ (80005a4 <EXTI9_5_IRQHandler+0x12c>)
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	f003 0301 	and.w	r3, r3, #1
 800053a:	2b00      	cmp	r3, #0
 800053c:	d005      	beq.n	800054a <EXTI9_5_IRQHandler+0xd2>
        gpioWritePin(GPIOD,LED_GREEN,TURN_OFF);
 800053e:	2200      	movs	r2, #0
 8000540:	210c      	movs	r1, #12
 8000542:	4819      	ldr	r0, [pc, #100]	@ (80005a8 <EXTI9_5_IRQHandler+0x130>)
 8000544:	f7ff fe40 	bl	80001c8 <gpioWritePin>
 8000548:	e004      	b.n	8000554 <EXTI9_5_IRQHandler+0xdc>
    	gpioWritePin(GPIOD,LED_ORANGE,TURN_OFF);
 800054a:	2200      	movs	r2, #0
 800054c:	210d      	movs	r1, #13
 800054e:	4816      	ldr	r0, [pc, #88]	@ (80005a8 <EXTI9_5_IRQHandler+0x130>)
 8000550:	f7ff fe3a 	bl	80001c8 <gpioWritePin>
    	EXTI->PR |= (1U<<7);
 8000554:	4b12      	ldr	r3, [pc, #72]	@ (80005a0 <EXTI9_5_IRQHandler+0x128>)
 8000556:	695b      	ldr	r3, [r3, #20]
 8000558:	4a11      	ldr	r2, [pc, #68]	@ (80005a0 <EXTI9_5_IRQHandler+0x128>)
 800055a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800055e:	6153      	str	r3, [r2, #20]
}
 8000560:	e01c      	b.n	800059c <EXTI9_5_IRQHandler+0x124>
	}else if(EXTI->PR & (1U<<8)){
 8000562:	4b0f      	ldr	r3, [pc, #60]	@ (80005a0 <EXTI9_5_IRQHandler+0x128>)
 8000564:	695b      	ldr	r3, [r3, #20]
 8000566:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800056a:	2b00      	cmp	r3, #0
 800056c:	d016      	beq.n	800059c <EXTI9_5_IRQHandler+0x124>
    	if(counter%2){
 800056e:	4b0d      	ldr	r3, [pc, #52]	@ (80005a4 <EXTI9_5_IRQHandler+0x12c>)
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	f003 0301 	and.w	r3, r3, #1
 8000576:	2b00      	cmp	r3, #0
 8000578:	d005      	beq.n	8000586 <EXTI9_5_IRQHandler+0x10e>
    	gpioWritePin(GPIOD,LED_RED,TURN_OFF);
 800057a:	2200      	movs	r2, #0
 800057c:	210e      	movs	r1, #14
 800057e:	480a      	ldr	r0, [pc, #40]	@ (80005a8 <EXTI9_5_IRQHandler+0x130>)
 8000580:	f7ff fe22 	bl	80001c8 <gpioWritePin>
 8000584:	e004      	b.n	8000590 <EXTI9_5_IRQHandler+0x118>
    	gpioWritePin(GPIOD,LED_BLUE,TURN_OFF);
 8000586:	2200      	movs	r2, #0
 8000588:	210f      	movs	r1, #15
 800058a:	4807      	ldr	r0, [pc, #28]	@ (80005a8 <EXTI9_5_IRQHandler+0x130>)
 800058c:	f7ff fe1c 	bl	80001c8 <gpioWritePin>
    	EXTI->PR |= (1U<<8);
 8000590:	4b03      	ldr	r3, [pc, #12]	@ (80005a0 <EXTI9_5_IRQHandler+0x128>)
 8000592:	695b      	ldr	r3, [r3, #20]
 8000594:	4a02      	ldr	r2, [pc, #8]	@ (80005a0 <EXTI9_5_IRQHandler+0x128>)
 8000596:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800059a:	6153      	str	r3, [r2, #20]
}
 800059c:	bf00      	nop
 800059e:	bd80      	pop	{r7, pc}
 80005a0:	40013c00 	.word	0x40013c00
 80005a4:	2000001c 	.word	0x2000001c
 80005a8:	40020c00 	.word	0x40020c00

080005ac <EXTI0_IRQHandler>:

void EXTI0_IRQHandler(){
 80005ac:	b580      	push	{r7, lr}
 80005ae:	af00      	add	r7, sp, #0

	if(EXTI->PR &(1U<<0))
 80005b0:	4b08      	ldr	r3, [pc, #32]	@ (80005d4 <EXTI0_IRQHandler+0x28>)
 80005b2:	695b      	ldr	r3, [r3, #20]
 80005b4:	f003 0301 	and.w	r3, r3, #1
 80005b8:	2b00      	cmp	r3, #0
 80005ba:	d009      	beq.n	80005d0 <EXTI0_IRQHandler+0x24>
	{
		gpioTogglePin(GPIOD,LED_BLUE);
 80005bc:	210f      	movs	r1, #15
 80005be:	4806      	ldr	r0, [pc, #24]	@ (80005d8 <EXTI0_IRQHandler+0x2c>)
 80005c0:	f7ff fe27 	bl	8000212 <gpioTogglePin>
		EXTI->PR |=(1U<<0);
 80005c4:	4b03      	ldr	r3, [pc, #12]	@ (80005d4 <EXTI0_IRQHandler+0x28>)
 80005c6:	695b      	ldr	r3, [r3, #20]
 80005c8:	4a02      	ldr	r2, [pc, #8]	@ (80005d4 <EXTI0_IRQHandler+0x28>)
 80005ca:	f043 0301 	orr.w	r3, r3, #1
 80005ce:	6153      	str	r3, [r2, #20]
	}
}
 80005d0:	bf00      	nop
 80005d2:	bd80      	pop	{r7, pc}
 80005d4:	40013c00 	.word	0x40013c00
 80005d8:	40020c00 	.word	0x40020c00

080005dc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005dc:	480d      	ldr	r0, [pc, #52]	@ (8000614 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005de:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005e0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005e4:	480c      	ldr	r0, [pc, #48]	@ (8000618 <LoopForever+0x6>)
  ldr r1, =_edata
 80005e6:	490d      	ldr	r1, [pc, #52]	@ (800061c <LoopForever+0xa>)
  ldr r2, =_sidata
 80005e8:	4a0d      	ldr	r2, [pc, #52]	@ (8000620 <LoopForever+0xe>)
  movs r3, #0
 80005ea:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005ec:	e002      	b.n	80005f4 <LoopCopyDataInit>

080005ee <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005ee:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005f0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005f2:	3304      	adds	r3, #4

080005f4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005f4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005f6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005f8:	d3f9      	bcc.n	80005ee <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005fa:	4a0a      	ldr	r2, [pc, #40]	@ (8000624 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005fc:	4c0a      	ldr	r4, [pc, #40]	@ (8000628 <LoopForever+0x16>)
  movs r3, #0
 80005fe:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000600:	e001      	b.n	8000606 <LoopFillZerobss>

08000602 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000602:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000604:	3204      	adds	r2, #4

08000606 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000606:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000608:	d3fb      	bcc.n	8000602 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800060a:	f000 f811 	bl	8000630 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800060e:	f7ff fe15 	bl	800023c <main>

08000612 <LoopForever>:

LoopForever:
  b LoopForever
 8000612:	e7fe      	b.n	8000612 <LoopForever>
  ldr   r0, =_estack
 8000614:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000618:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800061c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000620:	08000698 	.word	0x08000698
  ldr r2, =_sbss
 8000624:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000628:	20000020 	.word	0x20000020

0800062c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800062c:	e7fe      	b.n	800062c <ADC_IRQHandler>
	...

08000630 <__libc_init_array>:
 8000630:	b570      	push	{r4, r5, r6, lr}
 8000632:	4d0d      	ldr	r5, [pc, #52]	@ (8000668 <__libc_init_array+0x38>)
 8000634:	4c0d      	ldr	r4, [pc, #52]	@ (800066c <__libc_init_array+0x3c>)
 8000636:	1b64      	subs	r4, r4, r5
 8000638:	10a4      	asrs	r4, r4, #2
 800063a:	2600      	movs	r6, #0
 800063c:	42a6      	cmp	r6, r4
 800063e:	d109      	bne.n	8000654 <__libc_init_array+0x24>
 8000640:	4d0b      	ldr	r5, [pc, #44]	@ (8000670 <__libc_init_array+0x40>)
 8000642:	4c0c      	ldr	r4, [pc, #48]	@ (8000674 <__libc_init_array+0x44>)
 8000644:	f000 f818 	bl	8000678 <_init>
 8000648:	1b64      	subs	r4, r4, r5
 800064a:	10a4      	asrs	r4, r4, #2
 800064c:	2600      	movs	r6, #0
 800064e:	42a6      	cmp	r6, r4
 8000650:	d105      	bne.n	800065e <__libc_init_array+0x2e>
 8000652:	bd70      	pop	{r4, r5, r6, pc}
 8000654:	f855 3b04 	ldr.w	r3, [r5], #4
 8000658:	4798      	blx	r3
 800065a:	3601      	adds	r6, #1
 800065c:	e7ee      	b.n	800063c <__libc_init_array+0xc>
 800065e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000662:	4798      	blx	r3
 8000664:	3601      	adds	r6, #1
 8000666:	e7f2      	b.n	800064e <__libc_init_array+0x1e>
 8000668:	08000690 	.word	0x08000690
 800066c:	08000690 	.word	0x08000690
 8000670:	08000690 	.word	0x08000690
 8000674:	08000694 	.word	0x08000694

08000678 <_init>:
 8000678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800067a:	bf00      	nop
 800067c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800067e:	bc08      	pop	{r3}
 8000680:	469e      	mov	lr, r3
 8000682:	4770      	bx	lr

08000684 <_fini>:
 8000684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000686:	bf00      	nop
 8000688:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800068a:	bc08      	pop	{r3}
 800068c:	469e      	mov	lr, r3
 800068e:	4770      	bx	lr
